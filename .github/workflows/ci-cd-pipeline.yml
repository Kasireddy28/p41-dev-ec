name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest

    env:
      AWS_REGION: "ap-south-1"

    steps:
    # Checkout Code
    - name: Checkout repository
      uses: actions/checkout@v4

    # Optional: Run Python Unit Tests
    - name: Run unit tests (optional)
      run: |
        pip install -r app/requirements.txt
        pytest app/tests/ || echo "No tests found, skipping..."
      continue-on-error: true

    # Docker Setup
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Cache Docker layers
      uses: actions/cache@v4
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-buildx-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-buildx-

    - name: Log in to DockerHub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build and Push Docker Image
      run: |
        docker build -t ${{ secrets.DOCKER_USERNAME }}/simpletimeservice:${{ github.sha }} ./app
        docker tag ${{ secrets.DOCKER_USERNAME }}/simpletimeservice:${{ github.sha }} ${{ secrets.DOCKER_USERNAME }}/simpletimeservice:latest
        docker push ${{ secrets.DOCKER_USERNAME }}/simpletimeservice:${{ github.sha }}
        docker push ${{ secrets.DOCKER_USERNAME }}/simpletimeservice:latest

    # Terraform Setup
    - name: Set up Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        terraform_version: 1.3.7

    - name: Terraform Init
      run: terraform init
      working-directory: terraform
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_REGION: ${{ env.AWS_REGION }}

    - name: Terraform Validate
      run: terraform validate
      working-directory: terraform

    - name: Terraform Plan
      id: plan
      run: terraform plan -out=tfplan
      working-directory: terraform
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_REGION: ${{ env.AWS_REGION }}

    # OPTIONAL: Manual approval before apply (for prod envs)
    # - name: Wait for approval
    #   uses: hmarr/auto-approve-action@v2

    - name: Terraform Apply
      if: github.ref == 'refs/heads/main'
      run: terraform apply -auto-approve tfplan
      working-directory: terraform
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_REGION: ${{ env.AWS_REGION }}
